#container {
    perspective: 3000px;
    /* This places the z=0 plane away from us, so the entire cube is in front of us; you can read more at https://developer.mozilla.org/en-US/docs/Web/CSS/perspective */
}

#controls {
    position: absolute;
    width: 100%;
    top: calc(100% - (100% - 400px)/2 + 2.5em/2*1.5);
    font-family: 'Codystar', cursive;
    font-size: 2.5em;
    letter-spacing: 0.125em;
    text-align: center;
    text-transform: uppercase;
    cursor: pointer;
}

#cube {
    position: relative;
    margin: 100px auto;
    height: 400px;
    width: 400px;
    transition: transform 0.25s linear;
    /* Tells CSS we want to work in 3D */
    
    transform-style: preserve-3d;
    /* This moves the origin of all our transforms to the center of our cube */
    
    transform-origin: calc(400px/2) calc(400px/2) calc(-1 * 400px/2);
}

.cell {
    position: absolute;
    width: 50px;
    height: 50px;
    border: 1px solid rgba(0, 0, 0, 0.125);
    background-color: rgba(0, 0, 0, 0.05);
    opacity: 0.375;
}

.led {
    position: relative;
    width: 25%;
    height: 25%;
    border-radius: 100px;
    /* Setting this to something too large, since border-radius doesn't let you calculate with % */
    
    top: 50%;
    left: 50%;
    transform: translateY(-50%) translateX(-50%);
    /* Center the led vertically and horizontally in the cell; you can read more about the technique at http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/ */
}

.led.on {
    opacity: 1;
}

.led:not(.on) {
    /* A selector for all LEDs which do _not_ have the class 'on', you can read more at https://developer.mozilla.org/en-US/docs/Web/CSS/:not */
    
    opacity: 0.25;
}